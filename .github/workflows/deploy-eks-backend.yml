name: Deploy to Amazon ECS backend

on:
  push:
    branches:
      - "main"
    paths:
      - "backend/**" # backend 폴더 내 파일이 변경될 때만 실행
  workflow_dispatch:  # ✅ GitHub Actions에서 수동 실행 가능
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}  # Docker Hub 사용자명
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO }}                 # Docker Hub 리포지토리 이름
  IMAGE_NAME: backend-container                         # 컨테이너 이름

permissions:
  contents: write  # GitHub Actions가 새 브랜치를 생성할 수 있도록 설정
  pull-requests: write  # PR을 만들기 위한 권한 추가

jobs:
  build:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_TAG ./backend/
          docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_TAG

      - name: Create new branch for image update
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          git checkout -b update-image-${IMAGE_TAG}
          sed -i 's|image: .*$|image: '"$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_TAG"'|' k8s/deployment.yaml
          git add k8s/deployment.yaml
          git commit -m "Update deployment image to $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_TAG"
          git push origin update-image-${IMAGE_TAG}

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            github.rest.pulls.create({
              owner,
              repo,
              title: "Update Deployment Image",
              head: "update-image-${{ github.sha }}",
              base: "main",
              body: "자동화된 PR: 새로운 Docker 이미지 태그를 배포합니다.\\n이미지: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO }}:${{ github.sha }}",
            });

      

name: EKS CI Backend

on:
  push:
    branches:
      - "main"
    paths:
      - "backend/**" # backend 폴더 내 파일이 변경될 때만 실행
  workflow_dispatch: # ✅ GitHub Actions에서 수동 실행 가능
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }} # Docker Hub 사용자명
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO }} # Docker Hub 리포지토리 이름
  IMAGE_NAME: backend-container # 컨테이너 이름

# permissions:
#   contents: write  # GitHub Actions가 새 브랜치를 생성할 수 있도록 설정
#   pull-requests: write  # PR을 만들기 위한 권한 추가

jobs:
  build:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    environment: production
    env:
      IMAGE_TAG: ${{ github.sha }}  # job 레벨에 IMAGE_TAG를 정의하면 이후 단계에서도 사용 가능
      
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_TAG ./backend/
          docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_TAG

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # ✅ GitHub Actions가 push 권한을 가질 수 있도록 설정

      - name: Update Kustomize Image in Prod Overlay
        working-directory: k8s/overlays/prod/backend
        run: |
          kustomize edit set image $DOCKERHUB_USERNAME/$DOCKERHUB_REPO=$DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_TAG
          cat kustomization.yaml  # 업데이트 결과 확인
      
      - name: Commit and Push Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add k8s/overlays/prod/backend/kustomization.yaml
          if ! git diff --cached --quiet; then
            git commit -m "Update prod deployment image to $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$IMAGE_TAG"
            git push origin main
          else
            echo "No changes to commit."
          fi

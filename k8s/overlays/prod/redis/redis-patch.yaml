# k8s/overlays/prod/redis-full-patch.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-redis-node   # Helm 템플릿에서 생성된 StatefulSet 이름
  namespace: redis
spec:
  # replica.replicaCount 값을 덮어씁니다.
  replicas: 2
  template:
    spec:
      containers:
      - name: redis
        # auth.enabled=false → ALLOW_EMPTY_PASSWORD 환경변수를 "yes"로 강제 (Helm 차트에서는 이를 통해 인증을 비활성화)
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
  # volumeClaimTemplates 내에서 master와 replica의 storageClass 및 retentionPolicy 설정 적용
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      annotations:
        # master.persistence.persistentVolumeClaimRetentionPolicy.enabled 및
        # replica.persistence.persistentVolumeClaimRetentionPolicy.enabled를 true 로 설정
        persistentVolumeClaimRetentionPolicy.enabled: "true"
    spec:
      # master.persistence.storageClass 및 replica.persistence.storageClass 값을 덮어씀
      storageClassName: gp2-csi
---
# Sentinel 관련 설정(예: sentinel.enabled=true)이 이미 생성된 리소스에 대해서
# 필요한 경우 Sentinel Service나 StatefulSet의 sentinel 컨테이너에 대한 패치를 추가할 수 있습니다.
# 아래는 Sentinel 컨테이너의 존재를 확인하는 패치 예시입니다.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-redis-node
  namespace: redis
spec:
  template:
    spec:
      containers:
      - name: sentinel
        # sentinel.enabled=true인 경우, 필요한 추가 설정이나 환경변수 패치가 있다면 적용
        # (예를 들어, sentinel 관련 환경변수가 없으면 추가할 수 있음)
        env:
        - name: SENTINEL_ENABLED
          value: "true"

